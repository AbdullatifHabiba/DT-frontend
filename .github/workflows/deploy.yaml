name: Frontend CI/CD

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

permissions:
  id-token: write
  contents: write  # ← CHANGED: Need write to push changes

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      run: npm ci
      working-directory: frontend
      
    - name: Run tests
      run: npm test
      working-directory: frontend

  build-and-deploy-frontend:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0  # ← IMPORTANT: Get full history for git operations
        
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Login to Public ECR
      run: |
        aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
        
    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: public.ecr.aws/a1x0e8q5/abdu/dt-frontend
        tags: |
          type=sha,prefix={{branch}}-
          type=ref,event=tag
          type=raw,value=latest,enable={{is_default_branch}}
        
    - name: Build and Push Frontend Image
      run: |
        # Build with multiple tags
        docker build -t public.ecr.aws/a1x0e8q5/abdu/dt-frontend:${{ github.sha }} -f dockerfile.frontend .
        docker tag public.ecr.aws/a1x0e8q5/abdu/dt-frontend:${{ github.sha }} public.ecr.aws/a1x0e8q5/abdu/dt-frontend:latest
        
        # Push both tags
        docker push public.ecr.aws/a1x0e8q5/abdu/dt-frontend:${{ github.sha }}
        docker push public.ecr.aws/a1x0e8q5/abdu/dt-frontend:latest
        
        echo "IMAGE_SHA=${{ github.sha }}" >> $GITHUB_ENV
        echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV
        
    - name: Update Kustomize with new image tag
      run: |
        # Update the kustomization.yaml with the new image tag
        sed -i 's|newTag:.*$|newTag: '"${{ github.sha }}"'|g' overlays/dev/kustomization.yaml
        
        # Verify the change
        echo "Updated kustomization.yaml:"
        cat overlays/dev/kustomization.yaml | grep -A 2 -B 2 "dt-frontend"
        
    - name: Commit and push Kustomize changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        git add overlays/dev/kustomization.yaml
        git diff --staged --quiet || git commit -m "ci: update frontend image to ${{ github.sha }}"
        
        git push origin main
        
    - name: Trigger ArgoCD Sync (Optional)
      run: |
        # If you want to automatically sync ArgoCD
        echo "ArgoCD will automatically detect the git change and sync"
        # Or manually trigger sync:
        # kubectl patch app dependency-track-dev -n argocd -p '{"metadata": {"annotations": {"argocd.argoproj.io/refresh": "hard"}}}' --type merge